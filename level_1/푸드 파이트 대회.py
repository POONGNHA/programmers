# 문제 설명
# 수웅이는 매달 주어진 음식을 빨리 먹는 푸드 파이트 대회를 개최합니다. 이 대회에서 선수들은 1대 1로 대결하며, 매 대결마다 음식의 종류와 양이 바뀝니다. 대결은 준비된 음식들을 일렬로 배치한 뒤, 한 선수는 제일 왼쪽에 있는 음식부터 오른쪽으로, 다른 선수는 제일 오른쪽에 있는 음식부터 왼쪽으로 순서대로 먹는 방식으로 진행됩니다. 중앙에는 물을 배치하고, 물을 먼저 먹는 선수가 승리하게 됩니다.
#
# 이때, 대회의 공정성을 위해 두 선수가 먹는 음식의 종류와 양이 같아야 하며, 음식을 먹는 순서도 같아야 합니다. 또한, 이번 대회부터는 칼로리가 낮은 음식을 먼저 먹을 수 있게 배치하여 선수들이 음식을 더 잘 먹을 수 있게 하려고 합니다. 이번 대회를 위해 수웅이는 음식을 주문했는데, 대회의 조건을 고려하지 않고 음식을 주문하여 몇 개의 음식은 대회에 사용하지 못하게 되었습니다.
#
# 예를 들어, 3가지의 음식이 준비되어 있으며, 칼로리가 적은 순서대로 1번 음식을 3개, 2번 음식을 4개, 3번 음식을 6개 준비했으며, 물을 편의상 0번 음식이라고 칭한다면, 두 선수는 1번 음식 1개, 2번 음식 2개, 3번 음식 3개씩을 먹게 되므로 음식의 배치는 "1223330333221"이 됩니다. 따라서 1번 음식 1개는 대회에 사용하지 못합니다.
#
# 수웅이가 준비한 음식의 양을 칼로리가 적은 순서대로 나타내는 정수 배열 food가 주어졌을 때, 대회를 위한 음식의 배치를 나타내는 문자열을 return 하는 solution 함수를 완성해주세요.
#
# 제한사항
# 2 ≤ food의 길이 ≤ 9
# 1 ≤ food의 각 원소 ≤ 1,000
# food[i]에는 칼로리가 적은 순서대로 음식의 양이 담겨 있습니다.
# food[i]는 i번 음식의 수입니다.
# food[0]은 수웅이가 준비한 물의 양이며, 항상 1입니다.

#
# 나의 로직
# input_list의 모든 원소는 2로 나누었을때 나누어 져야함. 그렇지 않다면 나머지는 버린다.
# input_list[i]는 i의 칼로리를 가진 음식이다. 2로 나누어서 그 몫만큼 output_list에 추가해주어야한다.
# output_list 에 0 추가
# for문 하나로


# 변수 선언
# food = input_List
# food_arrangement 출력되는 음식배치

# 테스트 케이스
# 정답의 길이가 3 이상인 경우만 입력으로 주어집니다.
# 입출력 예
# food	result
# [1, 3, 4, 6]	"1223330333221"
# [1, 7, 1, 2]	"111303111"

# 오류
# 프로그래밍 순서

def solution(food):
    food_arrangement = list()
    for i in range(1,len(food)):
        for j in range(0,food[i]//2):
            food_arrangement.append(i)
    food_arrangement.append(0)
    food_arrangement.extend(food_arrangement[:-1].__reversed__())
    return ''.join(map(str,food_arrangement))

print(solution([1, 3, 4, 6]	))


# 오류
# reversed를 사용해야 하는데 이게 오류가 걸림
# __reversed__를 사용하니 오류가 없어졌다
# reversed를 쓰려면 for문이랑 같이 써야 하나보다.
